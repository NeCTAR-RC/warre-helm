apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "warre.fullname" . }}-notification
  labels:
    {{- include "warre.labels" . | nindent 4 }}
    app.kubernetes.io/component: notification
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.notification.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "warre.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: notification
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config-map.yaml") . | sha256sum }}
        {{- include "warre.vaultAnnotations" . | nindent 8 }}
      labels:
        {{- include "warre.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: notification
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "warre.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - warre-notification
          volumeMounts:
            - name: {{ include "warre.fullname" . }}
              mountPath: "/etc/warre/"
          resources:
            {{- toYaml .Values.notification.resources | nindent 12 }}
      volumes:
        - name: {{ include "warre.fullname" . }}
          configMap:
            name: {{ include "warre.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.notification.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.notification.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.notification.podAffinityPreset "component" "notification" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.notification.podAntiAffinityPreset "component" "notification" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.notification.nodeAffinityPreset.type "key" .Values.notification.nodeAffinityPreset.key "values" .Values.notification.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
